token literal names:
null
'let'
'fn'
'if'
'else'
'return'
'true'
'false'
null
null
'!='
'=='
'='
'+'
'-'
'!'
'*'
'/'
'>'
'<'
','
'('
')'
'{'
'}'
';'
null
null

token symbolic names:
null
LET
FUNCTION
IF
ELSE
RETURN
TRUE
FALSE
IDENT
INT
NOT_EQ
EQ
ASSIGN
PLUS
MINUS
BANG
MULTIPLY
DIVIDE
GT
LT
COMMA
LPAREN
RPAREN
LBRACE
RBRACE
SEMICOLON
WS
ILLEGAL

rule names:
prog
funcStatement
letStatement


atn:
[4, 1, 27, 45, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 1, 0, 1, 0, 5, 0, 9, 8, 0, 10, 0, 12, 0, 12, 9, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 22, 8, 1, 10, 1, 12, 1, 25, 9, 1, 3, 1, 27, 8, 1, 1, 1, 1, 1, 1, 1, 5, 1, 32, 8, 1, 10, 1, 12, 1, 35, 9, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 0, 3, 0, 2, 4, 0, 0, 46, 0, 10, 1, 0, 0, 0, 2, 15, 1, 0, 0, 0, 4, 38, 1, 0, 0, 0, 6, 9, 3, 2, 1, 0, 7, 9, 3, 4, 2, 0, 8, 6, 1, 0, 0, 0, 8, 7, 1, 0, 0, 0, 9, 12, 1, 0, 0, 0, 10, 8, 1, 0, 0, 0, 10, 11, 1, 0, 0, 0, 11, 13, 1, 0, 0, 0, 12, 10, 1, 0, 0, 0, 13, 14, 5, 0, 0, 1, 14, 1, 1, 0, 0, 0, 15, 16, 5, 2, 0, 0, 16, 17, 5, 8, 0, 0, 17, 26, 5, 21, 0, 0, 18, 23, 5, 8, 0, 0, 19, 20, 5, 20, 0, 0, 20, 22, 5, 8, 0, 0, 21, 19, 1, 0, 0, 0, 22, 25, 1, 0, 0, 0, 23, 21, 1, 0, 0, 0, 23, 24, 1, 0, 0, 0, 24, 27, 1, 0, 0, 0, 25, 23, 1, 0, 0, 0, 26, 18, 1, 0, 0, 0, 26, 27, 1, 0, 0, 0, 27, 28, 1, 0, 0, 0, 28, 29, 5, 22, 0, 0, 29, 33, 5, 23, 0, 0, 30, 32, 3, 4, 2, 0, 31, 30, 1, 0, 0, 0, 32, 35, 1, 0, 0, 0, 33, 31, 1, 0, 0, 0, 33, 34, 1, 0, 0, 0, 34, 36, 1, 0, 0, 0, 35, 33, 1, 0, 0, 0, 36, 37, 5, 24, 0, 0, 37, 3, 1, 0, 0, 0, 38, 39, 5, 1, 0, 0, 39, 40, 5, 8, 0, 0, 40, 41, 5, 12, 0, 0, 41, 42, 5, 9, 0, 0, 42, 43, 5, 25, 0, 0, 43, 5, 1, 0, 0, 0, 5, 8, 10, 23, 26, 33]